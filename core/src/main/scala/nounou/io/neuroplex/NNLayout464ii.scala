package nounou.io.neuroplex

import nounou.elements.layout.{NNLayoutHexagonal, NNLayoutNeighbor}

/**
  * Created by ktakagaki on 16/03/23.
  */
class NNLayout464ii() extends NNLayoutHexagonal with NNLayoutNeighbor {

  layoutArray =
    Array(
      Array( -1,  -1,  -1,  -1,  -1,  -1, 464, 465, 466, 467,  -1,  -1,  -1, 236, 235, 234, 233, 232,   6,   5,   4,   3,   2,   1,   0),
      Array( -1,  -1,  -1,  -1,  -1,  -1, 468, 469, 470, 471,  -1, 243, 242, 241, 240, 239, 238, 237,  13,  12,  11,  10,   9,   8,   7),
      Array( -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 251, 250, 249, 248, 247, 246, 245, 244,  20,  19,  18,  17,  16,  15,  14),
      Array( -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 259, 258, 257, 256, 255, 254, 253, 252,  28,  27,  26,  25,  24,  23,  22,  21),
      Array( -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 267, 266, 265, 264, 263, 262, 261, 260,  37,  36,  35,  34,  33,  32,  31,  30,  29),
      Array( -1,  -1,  -1,  -1,  -1,  -1,  -1, 276, 275, 274, 273, 272, 271, 270, 269, 268,  46,  45,  44,  43,  42,  41,  40,  39,  38),
      Array( -1,  -1,  -1,  -1,  -1,  -1, 286, 285, 284, 283, 282, 281, 280, 279, 278, 277,  55,  54,  53,  52,  51,  50,  49,  48,  47),
      Array( -1,  -1,  -1,  -1,  -1, 296, 295, 294, 293, 292, 291, 290, 289, 288, 287,  65,  64,  63,  62,  61,  60,  59,  58,  57,  56),
      Array( -1,  -1,  -1,  -1, 306, 305, 304, 303, 302, 301, 300, 299, 298, 297,  76,  75,  74,  73,  72,  71,  70,  69,  68,  67,  66),
      Array( -1,  -1,  -1, 317, 316, 315, 314, 313, 312, 311, 310, 309, 308, 307,  87,  86,  85,  84,  83,  82,  81,  80,  79,  78,  77),
      Array( -1,  -1, 329, 328, 327, 326, 325, 324, 323, 322, 321, 320, 319, 318,  98,  97,  96,  95,  94,  93,  92,  91,  90,  89,  88),
      Array( -1, 341, 340, 339, 338, 337, 336, 335, 334, 333, 332, 331, 330, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100,  99),
      Array( -1, 352, 351, 350, 349, 348, 347, 346, 345, 344, 343, 342, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111,  -1),
      Array(364, 363, 362, 361, 360, 359, 358, 357, 356, 355, 354, 353, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123,  -1),
      Array(376, 375, 374, 373, 372, 371, 370, 369, 368, 367, 366, 365, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135,  -1,  -1),
      Array(387, 386, 385, 384, 383, 382, 381, 380, 379, 378, 377, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146,  -1,  -1,  -1),
      Array(397, 396, 395, 394, 393, 392, 391, 390, 389, 388, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157,  -1,  -1,  -1,  -1),
      Array(407, 406, 405, 404, 403, 402, 401, 400, 399, 398, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168,  -1,  -1,  -1,  -1,  -1),
      Array(417, 416, 415, 414, 413, 412, 411, 410, 409, 408, 186, 185, 184, 183, 182, 181, 180, 179, 178,  -1,  -1,  -1,  -1,  -1,  -1),
      Array(426, 425, 424, 423, 422, 421, 420, 419, 418, 195, 194, 193, 192, 191, 190, 189, 188, 187,  -1,  -1,  -1,  -1,  -1,  -1,  -1),
      Array(434, 433, 432, 431, 430, 429, 428, 427, 204, 203, 202, 201, 200, 199, 198, 197, 196,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1),
      Array(442, 441, 440, 439, 438, 437, 436, 435, 212, 211, 210, 209, 208, 207, 206, 205,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1),
      Array(450, 449, 448, 447, 446, 445, 444, 443, 219, 218, 217, 216, 215, 214, 213,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1),
      Array(457, 456, 455, 454, 453, 452, 451, 226, 225, 224, 223, 222, 221, 220,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1),
      Array( -1, 463, 462, 461, 460, 459, 458, 231, 230, 229, 228, 227,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1))

  initialize()

  // <editor-fold defaultstate="collapsed" desc=" NNLayoutNeighbor ">

  override def getNeighbor(channel: Int, direction: Int, ring: Int): Int = ???

  protected def getNeighborImpl(channel: Int, direction: Int, ring: Int): Int = {
    loggerRequire( ring == 1, "Ring is currently only programmed for 1!")
    var (tempX, tempY) = getChannelHexCoordinates(channel)
    val tempReturn = direction match {
      case 0 => (tempX + 1, tempY)
      case 1 => (tempX + 1, tempY + 1)
      case 2 => (tempX    , tempY + 1)
      case 3 => (tempX - 1, tempY)
      case 4 => (tempX - 1, tempY - 1)
      case 5 => (tempX    , tempY - 1)
    }
    tempX = tempReturn._1
    tempY = tempReturn._2

    if( 0 <= tempY && tempY < layoutArray.length ){
      if( 0 <= tempX && layoutArray(tempY) != null && tempX < layoutArray(tempY).length ) layoutArray(tempY)(tempX)
      else -1
    } else -1

  }

  override def getNeighborVector(channel: Int, direction: Int, ring: Int): (Double, Double) = {
    loggerRequire( ring == 1, "Ring is currently only programmed for 1!")
    ???
  }

  override def getNeighbors(channel: Int, ring: Int): List[Int] = ???

  // </editor-fold>

  override def directionCount(ring: Int): Int= {
    loggerRequire( ring == 1, "Ring is currently only programmed for 1!")
    6
  }


}
